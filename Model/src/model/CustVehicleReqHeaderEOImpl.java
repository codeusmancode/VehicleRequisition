package model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Calendar;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 02 11:02:32 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CustVehicleReqHeaderEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        VrReqId,
        VrRequisitionNumber,
        DepId,
        VrDemandDate,
        VrRequiredDate,
        VehicleTypeId,
        Purpose,
        ApproxDuration,
        ApproxDistance,
        Status,
        VrOrgId,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        VersionNumber,
        UserId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int VRREQID = AttributesEnum.VrReqId.index();
    public static final int VRREQUISITIONNUMBER = AttributesEnum.VrRequisitionNumber.index();
    public static final int DEPID = AttributesEnum.DepId.index();
    public static final int VRDEMANDDATE = AttributesEnum.VrDemandDate.index();
    public static final int VRREQUIREDDATE = AttributesEnum.VrRequiredDate.index();
    public static final int VEHICLETYPEID = AttributesEnum.VehicleTypeId.index();
    public static final int PURPOSE = AttributesEnum.Purpose.index();
    public static final int APPROXDURATION = AttributesEnum.ApproxDuration.index();
    public static final int APPROXDISTANCE = AttributesEnum.ApproxDistance.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int VRORGID = AttributesEnum.VrOrgId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();
    public static final int USERID = AttributesEnum.UserId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CustVehicleReqHeaderEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.CustVehicleReqHeaderEO");
    }


    /**
     * Gets the attribute value for VrReqId, using the alias name VrReqId.
     * @return the value of VrReqId
     */
    public BigDecimal getVrReqId() {
        return (BigDecimal) getAttributeInternal(VRREQID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VrReqId.
     * @param value value to set the VrReqId
     */
    public void setVrReqId(BigDecimal value) {
        setAttributeInternal(VRREQID, value);
    }

    /**
     * Gets the attribute value for VrRequisitionNumber, using the alias name VrRequisitionNumber.
     * @return the value of VrRequisitionNumber
     */
    public BigDecimal getVrRequisitionNumber() {
        return (BigDecimal) getAttributeInternal(VRREQUISITIONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for VrRequisitionNumber.
     * @param value value to set the VrRequisitionNumber
     */
    public void setVrRequisitionNumber(BigDecimal value) {
        setAttributeInternal(VRREQUISITIONNUMBER, value);
    }

    /**
     * Gets the attribute value for DepId, using the alias name DepId.
     * @return the value of DepId
     */
    public String getDepId() {
        return (String) getAttributeInternal(DEPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepId.
     * @param value value to set the DepId
     */
    public void setDepId(String value) {
        setAttributeInternal(DEPID, value);
    }

    /**
     * Gets the attribute value for VrDemandDate, using the alias name VrDemandDate.
     * @return the value of VrDemandDate
     */
    public Timestamp getVrDemandDate() {
        return (Timestamp) getAttributeInternal(VRDEMANDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VrDemandDate.
     * @param value value to set the VrDemandDate
     */
    public void setVrDemandDate(Timestamp value) {
        setAttributeInternal(VRDEMANDDATE, value);
    }

    /**
     * Gets the attribute value for VrRequiredDate, using the alias name VrRequiredDate.
     * @return the value of VrRequiredDate
     */
    public Timestamp getVrRequiredDate() {
        return (Timestamp) getAttributeInternal(VRREQUIREDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VrRequiredDate.
     * @param value value to set the VrRequiredDate
     */
    public void setVrRequiredDate(Timestamp value) {
        setAttributeInternal(VRREQUIREDDATE, value);
    }

    /**
     * Gets the attribute value for VehicleTypeId, using the alias name VehicleTypeId.
     * @return the value of VehicleTypeId
     */
    public BigDecimal getVehicleTypeId() {
        return (BigDecimal) getAttributeInternal(VEHICLETYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehicleTypeId.
     * @param value value to set the VehicleTypeId
     */
    public void setVehicleTypeId(BigDecimal value) {
        setAttributeInternal(VEHICLETYPEID, value);
    }

    /**
     * Gets the attribute value for Purpose, using the alias name Purpose.
     * @return the value of Purpose
     */
    public String getPurpose() {
        return (String) getAttributeInternal(PURPOSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Purpose.
     * @param value value to set the Purpose
     */
    public void setPurpose(String value) {
        setAttributeInternal(PURPOSE, value);
    }

    /**
     * Gets the attribute value for ApproxDuration, using the alias name ApproxDuration.
     * @return the value of ApproxDuration
     */
    public String getApproxDuration() {
        return (String) getAttributeInternal(APPROXDURATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApproxDuration.
     * @param value value to set the ApproxDuration
     */
    public void setApproxDuration(String value) {
        setAttributeInternal(APPROXDURATION, value);
    }

    /**
     * Gets the attribute value for ApproxDistance, using the alias name ApproxDistance.
     * @return the value of ApproxDistance
     */
    public BigDecimal getApproxDistance() {
        return (BigDecimal) getAttributeInternal(APPROXDISTANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApproxDistance.
     * @param value value to set the ApproxDistance
     */
    public void setApproxDistance(BigDecimal value) {
        setAttributeInternal(APPROXDISTANCE, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for VrOrgId, using the alias name VrOrgId.
     * @return the value of VrOrgId
     */
    public BigDecimal getVrOrgId() {
        return (BigDecimal) getAttributeInternal(VRORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VrOrgId.
     * @param value value to set the VrOrgId
     */
    public void setVrOrgId(BigDecimal value) {
        setAttributeInternal(VRORGID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public BigDecimal getLastUpdatedBy() {
        return (BigDecimal) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(BigDecimal value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }

    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public BigDecimal getUserId() {
        return (BigDecimal) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(BigDecimal value) {
        setAttributeInternal(USERID, value);
    }


    /**
     * @param vrReqId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal vrReqId) {
        return new Key(new Object[] { vrReqId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String userid = (ADFContext.getCurrent()
                                     .getSessionScope()
                                     .get("userid") == null ? "-1" : ADFContext.getCurrent()
                                                                               .getSessionScope()
                                                                               .get("userid")
                                                                               .toString());
        String org = (ADFContext.getCurrent()
                                     .getSessionScope()
                                     .get("ORG_ID") == null ? "-1" : ADFContext.getCurrent()
                                                                               .getSessionScope()
                                                                               .get("ORG_ID")
                                                                               .toString());
        SequenceImpl s = new SequenceImpl("VRF_NO_SEQ", getDBTransaction());
        String sno = s.getSequenceNumber().toString();
        String year = Calendar.getInstance().get(Calendar.YEAR)+"";
        int vrNo = Integer.parseInt(org+year+sno);
        
        switch(operation){
        case DML_INSERT:
            setCreatedBy(new BigDecimal(userid));
            setLastUpdatedBy(new BigDecimal(userid));
            setVrOrgId(new BigDecimal(org));
            setStatus("PENDING");
            setVrRequisitionNumber(new BigDecimal(vrNo));
            break;
        case DML_UPDATE:
            setLastUpdatedBy(new BigDecimal(userid));
            break;
        }
        super.doDML(operation, e);
    }
}

